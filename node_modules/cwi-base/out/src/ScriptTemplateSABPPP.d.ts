import { LockingScript, P2PKH, Script, ScriptTemplate, Transaction, UnlockingScript } from "@bsv/sdk";
export interface ScriptTemplateParamsSABPPP {
    derivationPrefix?: string;
    derivationSuffix?: string;
}
export declare class ScriptTemplateSABPPP implements ScriptTemplate {
    params: ScriptTemplateParamsSABPPP;
    p2pkh: P2PKH;
    protocol: string;
    constructor(params: ScriptTemplateParamsSABPPP);
    /**
     * Combine inputs per protocol 3241645161d8 to generate an 'invoice' string used for cryptographic key generation.
     */
    invoice(): string;
    lock(lockerPrivKey: string, unlockerPubKey: string): LockingScript;
    unlock(unlockerPrivKey: string, lockerPubKey: string, sourceSatoshis?: number, lockingScript?: Script): {
        sign: (tx: Transaction, inputIndex: number) => Promise<UnlockingScript>;
        estimateLength: (tx: Transaction, inputIndex: number) => Promise<number>;
    };
}
//# sourceMappingURL=ScriptTemplateSABPPP.d.ts.map