import bsv from 'babbage-bsv';
/**
 * Input params to the `deriveKey` function.
 *
 * This function derives the child key given the root key.
 *
 * The flags:
 *
 *   rootKey, identityKey, publicKey, and sharedSymmetricKey flags
 *
 * can be combined with:
 *
 *    counterparty, protocolID and keyID
 *
 * to derive the required key.
 */
export interface SendOverDeriveKeyParams {
    key: Uint8Array;
    counterparty: string | 'self' | 'anyone' | bsv.PublicKey;
    protocolID: string | [number, string];
    keyID: string;
    derivationIdentity: string;
    rootKey?: boolean;
    identityKey?: boolean;
    publicKey?: boolean;
    forSelf?: boolean;
    sharedSymmetricKey?: boolean;
    deriveFromRoot?: boolean;
    /**
     *
     */
    revealCounterpartyLinkage?: boolean;
    /**
     * Optional, defaults to false.
     */
    revealPaymentLinkage?: boolean;
}
/**
 * This function derives the child key given the root key.
 *
 * The rootKey, identityKey, publicKey, and sharedSymmetricKey flags can be combined with
 * counterparty, protocolID and keyID to derive the needed keys.
 *
 * @return Hex string of key to return
 */
export declare function deriveKey(params: SendOverDeriveKeyParams): string;
//# sourceMappingURL=deriveKey.d.ts.map